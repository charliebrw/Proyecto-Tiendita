//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Edica.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EdicasEntities : DbContext
    {
        public EdicasEntities()
            : base("name=EdicasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
    
        public virtual int sp_A_Producto(string nombre, Nullable<decimal> precioVenta, Nullable<int> cantidad, string rUC, Nullable<int> iDCategoria)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("PrecioVenta", precioVenta) :
                new ObjectParameter("PrecioVenta", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_A_Producto", nombreParameter, precioVentaParameter, cantidadParameter, rUCParameter, iDCategoriaParameter);
        }
    
        public virtual ObjectResult<sp_M_Producto_Result> sp_M_Producto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_M_Producto_Result>("sp_M_Producto");
        }
    }
}
