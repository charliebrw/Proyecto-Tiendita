//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EdicasEntities1 : DbContext
    {
        public EdicasEntities1()
            : base("name=EdicasEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Categorias> Categorias { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Proveedores> Proveedores { get; set; }
        public virtual DbSet<DetalleVenta> DetalleVenta { get; set; }
        public virtual DbSet<Ventas> Ventas { get; set; }
    
        public virtual int sp_A_Producto(string proNombre, Nullable<int> proCantidad, Nullable<decimal> proPrecioVenta, Nullable<int> iDCategoria, string rUC, byte[] proImagen)
        {
            var proNombreParameter = proNombre != null ?
                new ObjectParameter("proNombre", proNombre) :
                new ObjectParameter("proNombre", typeof(string));
    
            var proCantidadParameter = proCantidad.HasValue ?
                new ObjectParameter("proCantidad", proCantidad) :
                new ObjectParameter("proCantidad", typeof(int));
    
            var proPrecioVentaParameter = proPrecioVenta.HasValue ?
                new ObjectParameter("proPrecioVenta", proPrecioVenta) :
                new ObjectParameter("proPrecioVenta", typeof(decimal));
    
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var proImagenParameter = proImagen != null ?
                new ObjectParameter("proImagen", proImagen) :
                new ObjectParameter("proImagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_A_Producto", proNombreParameter, proCantidadParameter, proPrecioVentaParameter, iDCategoriaParameter, rUCParameter, proImagenParameter);
        }
    
        public virtual ObjectResult<sp_C_Productos_Result> sp_C_Productos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_Productos_Result>("sp_C_Productos");
        }
    
        public virtual int sp_E_Producto(Nullable<int> iDProducto)
        {
            var iDProductoParameter = iDProducto.HasValue ?
                new ObjectParameter("IDProducto", iDProducto) :
                new ObjectParameter("IDProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_E_Producto", iDProductoParameter);
        }
    
        public virtual int sp_M_Producto(Nullable<int> iDProducto, string proNombre, Nullable<decimal> proPrecioVenta, Nullable<int> iDCategoria, string rUC, byte[] proImagen)
        {
            var iDProductoParameter = iDProducto.HasValue ?
                new ObjectParameter("IDProducto", iDProducto) :
                new ObjectParameter("IDProducto", typeof(int));
    
            var proNombreParameter = proNombre != null ?
                new ObjectParameter("proNombre", proNombre) :
                new ObjectParameter("proNombre", typeof(string));
    
            var proPrecioVentaParameter = proPrecioVenta.HasValue ?
                new ObjectParameter("proPrecioVenta", proPrecioVenta) :
                new ObjectParameter("proPrecioVenta", typeof(decimal));
    
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var proImagenParameter = proImagen != null ?
                new ObjectParameter("proImagen", proImagen) :
                new ObjectParameter("proImagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_M_Producto", iDProductoParameter, proNombreParameter, proPrecioVentaParameter, iDCategoriaParameter, rUCParameter, proImagenParameter);
        }
    
        public virtual ObjectResult<sp_C_ProductoxID_Result> sp_C_ProductoxID(Nullable<int> iDProducto)
        {
            var iDProductoParameter = iDProducto.HasValue ?
                new ObjectParameter("IDProducto", iDProducto) :
                new ObjectParameter("IDProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_ProductoxID_Result>("sp_C_ProductoxID", iDProductoParameter);
        }
    
        public virtual int sp_A_Proveedor(string rUC, string provNombres, string provDireccion, string provTelefono)
        {
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var provNombresParameter = provNombres != null ?
                new ObjectParameter("provNombres", provNombres) :
                new ObjectParameter("provNombres", typeof(string));
    
            var provDireccionParameter = provDireccion != null ?
                new ObjectParameter("provDireccion", provDireccion) :
                new ObjectParameter("provDireccion", typeof(string));
    
            var provTelefonoParameter = provTelefono != null ?
                new ObjectParameter("provTelefono", provTelefono) :
                new ObjectParameter("provTelefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_A_Proveedor", rUCParameter, provNombresParameter, provDireccionParameter, provTelefonoParameter);
        }
    
        public virtual ObjectResult<sp_C_Proveedores_Result> sp_C_Proveedores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_Proveedores_Result>("sp_C_Proveedores");
        }
    
        public virtual ObjectResult<sp_C_ProveedorxRUC_Result> sp_C_ProveedorxRUC(string rUC)
        {
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_ProveedorxRUC_Result>("sp_C_ProveedorxRUC", rUCParameter);
        }
    
        public virtual int sp_E_Proveedor(string rUC)
        {
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_E_Proveedor", rUCParameter);
        }
    
        public virtual int sp_M_Proveedor(string rUC, string provNombres, string provDireccion, string provTelefono)
        {
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var provNombresParameter = provNombres != null ?
                new ObjectParameter("provNombres", provNombres) :
                new ObjectParameter("provNombres", typeof(string));
    
            var provDireccionParameter = provDireccion != null ?
                new ObjectParameter("provDireccion", provDireccion) :
                new ObjectParameter("provDireccion", typeof(string));
    
            var provTelefonoParameter = provTelefono != null ?
                new ObjectParameter("provTelefono", provTelefono) :
                new ObjectParameter("provTelefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_M_Proveedor", rUCParameter, provNombresParameter, provDireccionParameter, provTelefonoParameter);
        }
    
        public virtual int sp_A_Categoria(string catNombre)
        {
            var catNombreParameter = catNombre != null ?
                new ObjectParameter("catNombre", catNombre) :
                new ObjectParameter("catNombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_A_Categoria", catNombreParameter);
        }
    
        public virtual ObjectResult<sp_C_Productos_Agotados_Result> sp_C_Productos_Agotados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_Productos_Agotados_Result>("sp_C_Productos_Agotados");
        }
    
        public virtual ObjectResult<sp_C_ProductoxCategoria_Result> sp_C_ProductoxCategoria(Nullable<int> iDCategoria)
        {
            var iDCategoriaParameter = iDCategoria.HasValue ?
                new ObjectParameter("IDCategoria", iDCategoria) :
                new ObjectParameter("IDCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_ProductoxCategoria_Result>("sp_C_ProductoxCategoria", iDCategoriaParameter);
        }
    
        public virtual ObjectResult<sp_C_ProductoxNombre_Result> sp_C_ProductoxNombre(string proNombre)
        {
            var proNombreParameter = proNombre != null ?
                new ObjectParameter("proNombre", proNombre) :
                new ObjectParameter("proNombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_ProductoxNombre_Result>("sp_C_ProductoxNombre", proNombreParameter);
        }
    
        public virtual int sp_M_Producto_Cantidad(Nullable<int> iDProducto, Nullable<int> proCantidad)
        {
            var iDProductoParameter = iDProducto.HasValue ?
                new ObjectParameter("IDProducto", iDProducto) :
                new ObjectParameter("IDProducto", typeof(int));
    
            var proCantidadParameter = proCantidad.HasValue ?
                new ObjectParameter("proCantidad", proCantidad) :
                new ObjectParameter("proCantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_M_Producto_Cantidad", iDProductoParameter, proCantidadParameter);
        }
    
        public virtual ObjectResult<sp_C_Usuarios_Roles_Result> sp_C_Usuarios_Roles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_Usuarios_Roles_Result>("sp_C_Usuarios_Roles");
        }
    
        public virtual ObjectResult<sp_C_IDVenta_Result> sp_A_Venta(Nullable<decimal> subTotal, Nullable<decimal> total)
        {
            var subTotalParameter = subTotal.HasValue ?
                new ObjectParameter("SubTotal", subTotal) :
                new ObjectParameter("SubTotal", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_C_IDVenta_Result>("sp_A_Venta", subTotalParameter, totalParameter);
        }
    
        public virtual int sp_A_DetalleVenta(Nullable<int> iDVenta, Nullable<int> iDProducto, Nullable<int> cantidad, Nullable<decimal> subTotal, Nullable<decimal> precio)
        {
            var iDVentaParameter = iDVenta.HasValue ?
                new ObjectParameter("IDVenta", iDVenta) :
                new ObjectParameter("IDVenta", typeof(int));
    
            var iDProductoParameter = iDProducto.HasValue ?
                new ObjectParameter("IDProducto", iDProducto) :
                new ObjectParameter("IDProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var subTotalParameter = subTotal.HasValue ?
                new ObjectParameter("SubTotal", subTotal) :
                new ObjectParameter("SubTotal", typeof(decimal));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_A_DetalleVenta", iDVentaParameter, iDProductoParameter, cantidadParameter, subTotalParameter, precioParameter);
        }
    
        public virtual int sp_M_Venta_Stock(Nullable<int> iDProducto, Nullable<int> cantidad)
        {
            var iDProductoParameter = iDProducto.HasValue ?
                new ObjectParameter("IDProducto", iDProducto) :
                new ObjectParameter("IDProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_M_Venta_Stock", iDProductoParameter, cantidadParameter);
        }
    }
}
